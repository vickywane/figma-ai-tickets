-- SELECT pg_catalog.set_config('search_path', '', false)
-- SET check_function_bodies = false
-- SET xmloption = content
-- SET client_min_messages = warning
-- SET row_security = off
-- COMMENT ON SCHEMA "public" IS 'standard public schema'
-- CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql"
-- CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions"
-- CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions"
-- CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault"
-- CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions"
-- SET default_tablespace = ''
-- SET default_table_access_method = "heap"
-- CREATE TABLE IF NOT EXISTS "public"."boards" (
--     "id" bigint NOT NULL,
--     "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
--     "created_by" "uuid",
--     "name" "text",
--     "link_id" character varying,
--     "integration" bigint
-- )
-- ALTER TABLE "public"."boards" OWNER TO "postgres"
-- COMMENT ON TABLE "public"."boards" IS 'For boards attached to an integration'
-- ALTER TABLE "public"."boards" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
--     SEQUENCE NAME "public"."boards_id_seq"
--     START WITH 1
--     INCREMENT BY 1
--     NO MINVALUE
--     NO MAXVALUE
--     CACHE 1
-- )
-- CREATE TABLE IF NOT EXISTS "public"."integrations" (
--     "id" bigint NOT NULL,
--     "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
--     "updated_at" timestamp without time zone DEFAULT "now"(),
--     "name" "text" NOT NULL,
--     "created_by" "uuid" NOT NULL,
--     "tokens" "text" NOT NULL,
--     "board" "text"
-- )
-- ALTER TABLE "public"."integrations" OWNER TO "postgres"
-- COMMENT ON TABLE "public"."integrations" IS 'For integrations with task boards such as Trello, Asana, Jira created by a user'
-- ALTER TABLE "public"."integrations" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
--     SEQUENCE NAME "public"."integrations_id_seq"
--     START WITH 1
--     INCREMENT BY 1
--     NO MINVALUE
--     NO MAXVALUE
--     CACHE 1
-- )
-- ALTER TABLE ONLY "public"."boards"
--     ADD CONSTRAINT "boards_pkey" PRIMARY KEY ("id")
-- ALTER TABLE ONLY "public"."integrations"
--     ADD CONSTRAINT "integrations_pkey" PRIMARY KEY ("id")
-- ALTER TABLE ONLY "public"."boards"
--     ADD CONSTRAINT "boards_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE CASCADE
-- ALTER TABLE ONLY "public"."boards"
--     ADD CONSTRAINT "boards_integration_fkey" FOREIGN KEY ("integration") REFERENCES "public"."integrations"("id") ON UPDATE CASCADE ON DELETE CASCADE
-- ALTER TABLE ONLY "public"."integrations"
--     ADD CONSTRAINT "integrations_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE CASCADE
-- CREATE POLICY "Enable read access for all users" ON "public"."boards" USING (true)
-- CREATE POLICY "Enable read access for all users" ON "public"."integrations" USING (true)
-- ALTER TABLE "public"."boards" ENABLE ROW LEVEL SECURITY
-- ALTER TABLE "public"."integrations" ENABLE ROW LEVEL SECURITY
-- ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres"
-- ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."boards"
-- ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."integrations"
-- GRANT USAGE ON SCHEMA "public" TO "postgres"
-- GRANT USAGE ON SCHEMA "public" TO "anon"
-- GRANT USAGE ON SCHEMA "public" TO "authenticated"
-- GRANT USAGE ON SCHEMA "public" TO "service_role"
-- GRANT ALL ON TABLE "public"."boards" TO "anon"
-- GRANT ALL ON TABLE "public"."boards" TO "authenticated"
-- GRANT ALL ON TABLE "public"."boards" TO "service_role"
-- GRANT ALL ON SEQUENCE "public"."boards_id_seq" TO "anon"
-- GRANT ALL ON SEQUENCE "public"."boards_id_seq" TO "authenticated"
-- GRANT ALL ON SEQUENCE "public"."boards_id_seq" TO "service_role"
-- GRANT ALL ON TABLE "public"."integrations" TO "anon"
-- GRANT ALL ON TABLE "public"."integrations" TO "authenticated"
-- GRANT ALL ON TABLE "public"."integrations" TO "service_role"
-- GRANT ALL ON SEQUENCE "public"."integrations_id_seq" TO "anon"
-- GRANT ALL ON SEQUENCE "public"."integrations_id_seq" TO "authenticated"
-- GRANT ALL ON SEQUENCE "public"."integrations_id_seq" TO "service_role"
-- ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "postgres"
-- ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "anon"
-- ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "authenticated"
-- ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "service_role"
-- ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "postgres"
-- ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "anon"
-- ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "authenticated"
-- ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "service_role"
-- ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "postgres"
-- ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "anon"
-- ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "authenticated"
-- ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "service_role"
-- RESET ALL